{"version":3,"sources":["Math.js","Contexts/history.context.js","config.js","components/Conversion.js","components/Operations.js","components/History.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Convert2Bin","outstring","statstring","signBit","power","rounding","binexpnt","index1","index2","cnst","bias","lastbit","rounded","index3","binexpnt2","output","String","this","Size","Result","BinVal","MinExp","MaxExp","StatCond","MinUnnormExp","DispStr","BinaryPower","ExpBias","Dec2Bin","input","value","intpart","decpart","locE","stop","expnum","locDPact","locDP","start","MSDfound","index","expdelta","expstart","expprecision","numerals","expstr","signstr","expsignstr","expstrtmp","toUpperCase","indexOf","substring","length","charAt","Canonical","A_gt_B","MostSigOrder","OvfCheck","StatCond64","UndfCheck","Math","abs","floor","A","B","greater","Adigit","Bdigit","Convert2Hex","temp","i","pow","numStrClipOff","precision","MSD","digits","number","result","tempstr","Convert2Dec","s","dp","val","decValue","parseInt","log","LN10","DecValue","numCutOff","ieee","BinString","Array","float2Hex","d","sign","parseFloat","mantissa","toString","exponent","substr","replace","exp","float2ieee754","ieee32","ieee64","RemoveBlanks","binStr","sign_bit","exp_bit","mantissa_bit","hex2Float","str","float","int","multi","test","exec","charCodeAt","ieee754ToFloat","e","m","f","convert","format","realVal","hexVal","binVal","parsefloat","parts","split","testInt","isNaN","alert","validateiee754","ieeee754ToHex","num","compute","val1","val2","operation","HistoryContext","React","createContext","HistoryProvider","state","history","Provider","setHistory","setState","props","children","Component","URL","Conversion","useState","setFormat","setrealVal","setbinVal","sethexVal","setSign","setExp","setMantissa","setVal","historyContext","useContext","useEffect","document","title","getHistory","handleChange","event","target","axios","get","then","res","console","data","catch","error","className","checked","onChange","name","type","id","htmlFor","placeholder","style","flexBasis","width","onClick","Type","InputType","post","addToHistory","disabled","Operations","setOperation","setVal1","setVal2","iee754Val1","setiee754Val1","iee754Val2","setiee754Val2","defaultValue","value1","value2","parts1","parts2","s1","e1","m1","s2","e2","m2","operate","History","color","scope","map","item","inputType","Home","backgroundColor","border","onKeyPress","handleEnter","withRouter","loggedIn","setLoggedIn","activeClassName","to","exact","path","key","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9b89ad7.chunk.js","sourcesContent":["\r\nexport function Convert2Bin(outstring, statstring, signBit, power, rounding) {\r\n    let output = new String()                 //Output\r\n\r\n    var binexpnt, index1, index2, cnst, bias, lastbit, rounded, index3, binexpnt2\r\n    var moreBits\r\n\r\n    cnst = 2102   // 1 (carry bit) + 1023 + 1 + 1022 + 53 + 2 (round bits)\r\n    bias = 1024\r\n\r\n    //init\r\n    for (index1 = 0; index1 < this.Size; index1++)  this.Result[index1] = 0\r\n\r\n    //sign bit\r\n    this.Result[0] = signBit\r\n\r\n    //obtain exponent value\r\n    index1 = 0\r\n\r\n    if (this.Size === 32) index2 = 9\r\n    else index2 = 12\r\n\r\n    if (rounding && (statstring === \"normal\")) {\r\n        //find most significant bit of significand\r\n        while ((index1 < cnst) && (this.BinVal[index1] !== 1)) index1++\r\n\r\n        binexpnt = bias - index1\r\n\r\n        //regular normalized numbers\r\n        if (binexpnt >= this.MinExp) {\r\n            //the value is shifted until the most\r\n            index1++    //significant 1 is to the left of the binary\r\n            //point and that bit is implicit in the encoding\r\n        }//if normalized numbers\r\n\r\n        //support for zero and denormalized numbers\r\n        //exponent underflow for this precision\r\n        else {\r\n            binexpnt = this.MinExp - 1\r\n            index1 = bias - binexpnt\r\n        }//if zero or denormalized (else section)\r\n\r\n\r\n        //use round to nearest value mode\r\n\r\n        //compute least significant (low-order) bit of significand\r\n        lastbit = this.Size - 1 - index2 + index1\r\n\r\n        //the bits folllowing the low-order bit have a value of (at least) 1/2\r\n        if (this.BinVal[lastbit + 1] === 1) {\r\n            rounded = 0\r\n\r\n            //odd low-order bit\r\n            if (this.BinVal[lastbit] === 1) {\r\n                //exactly 1/2 the way between odd and even rounds up to the even,\r\n                //so the rest of the bits don't need to be checked to see if the value\r\n                //is more than 1/2 since the round up to the even number will occur\r\n                //anyway due to the 1/2\r\n                rounded = 1\r\n            }//if odd low-order bit\r\n\r\n            //even low-order bit\r\n            else  //this.BinVal[lastbit] === 0\r\n            {\r\n                //exactly 1/2 the way between even and odd rounds down to the even,\r\n                //so the rest of the bits need to be checked to see if the value\r\n                //is more than 1/2 in order to round up to the odd number\r\n                index3 = lastbit + 2\r\n                while ((rounded === 0) && (index3 < cnst)) {\r\n                    rounded = this.BinVal[index3]\r\n                    index3++\r\n                }//while checking for more than 1/2\r\n\r\n            }//if even low-order bit (else section)\r\n\r\n            //do rounding \"additions\"\r\n            index3 = lastbit\r\n            while ((rounded === 1) && (index3 >= 0)) {\r\n                // 0 + 1 -> 1 result with 0 carry\r\n                if (this.BinVal[index3] === 0) {\r\n                    // 1 result\r\n                    this.BinVal[index3] = 1\r\n\r\n                    // 0 carry\r\n                    rounded = 0\r\n\r\n                }//if bit is a 0\r\n\r\n                // 1 + 1 -> 0 result with 1 carry\r\n                else  //this.BinVal[index3] === 1\r\n                {\r\n                    // 0 result\r\n                    this.BinVal[index3] = 0\r\n\r\n                    // 1 carry\r\n                    //          rounded = 1\r\n                }//if bit is a 1 (else section)\r\n\r\n                index3--\r\n            }//while \"adding\" carries from right to left in bits\r\n\r\n        }//if at least 1/2\r\n\r\n        //obtain exponent value\r\n        index1 = index1 - 2\r\n        if (index1 < 0) index1 = 0\r\n\r\n    }//if rounding\r\n\r\n    //find most significant bit of significand\r\n    while ((index1 < cnst) && (this.BinVal[index1] !== 1)) index1++\r\n\r\n    binexpnt2 = bias - index1\r\n\r\n    if (statstring === \"normal\") {\r\n        binexpnt = binexpnt2\r\n\r\n        //regular normalized numbers\r\n        if ((binexpnt >= this.MinExp) && (binexpnt <= this.MaxExp)) {\r\n            //the value is shifted until the most\r\n            index1++                //significant 1 is to the left of the binary\r\n            //point and that bit is implicit in the encoding\r\n        }//if normalized numbers\r\n\r\n        //support for zero and denormalized numbers\r\n        //exponent underflow for this precision\r\n        else if (binexpnt < this.MinExp) {\r\n            if (binexpnt2 === bias - cnst)\r\n                //value is truely zero\r\n                this.StatCond = \"normal\"\r\n            else if (binexpnt2 < this.MinUnnormExp)\r\n                this.StatCond = \"underflow\"\r\n            else\r\n                this.StatCond = \"denormalized\"\r\n\r\n            binexpnt = this.MinExp - 1\r\n            index1 = bias - binexpnt\r\n        }//if zero or denormalized (else if section)\r\n    }\r\n\r\n    else //already special values\r\n    {\r\n        binexpnt = power\r\n        index1 = bias - binexpnt\r\n\r\n        if (binexpnt > this.MaxExp)\r\n            binexpnt = this.MaxExp + 1\r\n\r\n        else if (binexpnt < this.MinExp)\r\n            binexpnt = this.MinExp - 1\r\n\r\n    }//if already special (else section)\r\n\r\n    //copy the result\r\n    while ((index2 < this.Size) && (index1 < cnst)) {\r\n        this.Result[index2] = this.BinVal[index1]\r\n        index2++\r\n        index1++\r\n    }//while\r\n\r\n    //max exponent for this precision\r\n    if ((binexpnt > this.MaxExp) || (statstring !== \"normal\")) {\r\n        //overflow of this precision, set infinity\r\n        if (statstring === \"normal\") {\r\n            binexpnt = this.MaxExp + 1\r\n            this.StatCond = \"overflow\"\r\n            this.DispStr = \"Infinity\"\r\n\r\n            if (this.Result[0] === 1)\r\n                this.DispStr = \"-\" + this.DispStr\r\n\r\n            if (this.Size === 32) index2 = 9\r\n            else index2 = 12\r\n\r\n            //zero the significand\r\n            while (index2 < this.Size) {\r\n                this.Result[index2] = 0\r\n                index2++\r\n            }//while\r\n\r\n        }//if overflowed\r\n\r\n        else //already special values\r\n        {\r\n            this.StatCond = statstring\r\n            this.DispStr = outstring\r\n        }//if already special (else section)\r\n\r\n    }//if max exponent\r\n\r\n    //convert exponent value to binary representation\r\n    if (this.Size === 32) index1 = 8\r\n    else index1 = 11\r\n    this.BinaryPower = binexpnt\r\n    binexpnt += this.ExpBias    //bias\r\n    while ((binexpnt / 2) !== 0) {\r\n        this.Result[index1] = binexpnt % 2\r\n        if (binexpnt % 2 === 0) binexpnt = binexpnt / 2\r\n        else binexpnt = binexpnt / 2 - 0.5\r\n        index1 -= 1\r\n    }\r\n\r\n    //output binary result\r\n    output = \"\"\r\n    for (index1 = 0; index1 < this.Size; index1++)\r\n        output = output + this.Result[index1]\r\n    return output\r\n\r\n}\r\n\r\nexport function Dec2Bin(input) {\r\n    var value, intpart, decpart, binexpnt, index1, cnst, bias\r\n\r\n    cnst = 2102   // 1 (carry bit) + 1023 + 1 + 1022 + 53 + 2 (round bits)\r\n    bias = 1024\r\n\r\n    //init\r\n    for (index1 = 0; index1 < cnst; index1++)  this.BinVal[index1] = 0\r\n\r\n    input = Canonical(input)\r\n\r\n    //sign bit\r\n    if (input.charAt(0) === \"-\")\r\n        this.Result[0] = 1\r\n    else\r\n        this.Result[0] = 0\r\n\r\n    //if value magnitude greater than 1.7976931348623157E+308, set infinity\r\n    input = OvfCheck(input)\r\n\r\n    if (input.indexOf(\"Infinity\") !== -1) {\r\n        binexpnt = this.MaxExp + 1\r\n        this.StatCond64 = \"overflow\"\r\n        this.DispStr = input\r\n\r\n    }//if greater than 1.7976931348623157E+308\r\n\r\n    //Value magnitude is not greater than 1.7976931348623157E+308\r\n    else {\r\n\r\n        //if value magnitude less than 2.4703282292062328E-324, set \"underflow\".\r\n        this.StatCond64 = UndfCheck(input)\r\n\r\n        if (this.StatCond64 === \"underflow\") {\r\n            binexpnt = this.MinExp - 1\r\n\r\n        }//if less than 2.4703282292062328E-324\r\n\r\n        //Value magnitude is not less than 2.4703282292062328E-324\r\n        else {\r\n\r\n            //convert 'input' from string to numeric\r\n            input = input * 1.0\r\n\r\n            //convert and seperate input to integer and decimal parts\r\n            value = Math.abs(input)\r\n            intpart = Math.floor(value)\r\n            decpart = value - intpart\r\n\r\n            //convert integer part\r\n            index1 = bias\r\n            while (((intpart / 2) !== 0) && (index1 >= 0)) {\r\n                this.BinVal[index1] = intpart % 2\r\n                if (intpart % 2 === 0) intpart = intpart / 2\r\n                else intpart = intpart / 2 - 0.5\r\n                index1 -= 1\r\n            }\r\n\r\n            //convert decimal part\r\n            index1 = bias + 1\r\n            while ((decpart > 0) && (index1 < cnst)) {\r\n                decpart *= 2\r\n                if (decpart >= 1) { this.BinVal[index1] = 1; decpart--; index1++ }\r\n                else { this.BinVal[index1] = 0; index1++ }\r\n            }\r\n\r\n            //obtain exponent value\r\n            index1 = 0\r\n\r\n            //find most significant bit of significand\r\n            while ((index1 < cnst) && (this.BinVal[index1] !== 1)) index1++\r\n\r\n            binexpnt = bias - index1\r\n\r\n            //support for zero and denormalized numbers\r\n            //exponent underflow for this precision\r\n            if (binexpnt < this.MinExp) {\r\n                binexpnt = this.MinExp - 1\r\n\r\n            }//if zero or denormalized\r\n\r\n        }//if not less than 2.4703282292062328E-324 (else section)\r\n\r\n    }//if not greater than 1.7976931348623157E+308 (else section)\r\n\r\n    //output exponent value\r\n    this.BinaryPower = binexpnt\r\n\r\n\r\n}\r\n\r\nfunction Canonical(input) {\r\n    let output = new String()\r\n    let numerals = new String()\r\n    let expstr = new String()\r\n    let signstr = new String()\r\n    let expsignstr = new String()\r\n    let expstrtmp = new String()\r\n\r\n    var locE, stop, expnum, locDPact, locDP, start, MSDfound, index, expdelta\r\n    var expstart, expprecision\r\n\r\n    numerals = \"0123456789\";\r\n\r\n    expprecision = 5\r\n\r\n    input = input.toUpperCase()\r\n\r\n    locE = input.indexOf(\"E\");\r\n    if (locE !== -1) {\r\n        stop = locE\r\n        expstr = input.substring(locE + 1, input.length)\r\n        expnum = expstr * 1\r\n    }\r\n    else {\r\n        stop = input.length\r\n        expnum = 0\r\n    }\r\n\r\n    locDPact = input.indexOf(\".\");\r\n    if (locDPact !== -1)\r\n        locDP = locDPact\r\n    else\r\n        locDP = stop\r\n\r\n    start = 0\r\n    if (input.charAt(start) === \"-\") {\r\n        start++\r\n        signstr = \"-\"\r\n    }\r\n    else if (input.charAt(start) === \"+\") {\r\n        start++\r\n        signstr = \"+\"\r\n    }\r\n    else\r\n        signstr = \"+\"\r\n\r\n    MSDfound = false\r\n    while ((start < stop) && !MSDfound) {\r\n        index = 1\r\n        while (index < numerals.length) {\r\n            if (input.charAt(start) === numerals.charAt(index)) {\r\n                MSDfound = true\r\n                break\r\n            }\r\n            index++\r\n        }\r\n        start++\r\n    }\r\n    start--\r\n\r\n    if (MSDfound) {\r\n        expdelta = locDP - start\r\n        if (expdelta > 0)\r\n            expdelta = expdelta - 1\r\n\r\n        expnum = expnum + expdelta\r\n    }\r\n    else  //No significant digits found, value is zero\r\n        expnum = 0\r\n\r\n    expstrtmp = \"\" + expnum\r\n\r\n    expstart = 0\r\n    if (expstrtmp.charAt(expstart) === \"-\") {\r\n        expstart++\r\n        expsignstr = \"-\"\r\n    }\r\n    else\r\n        expsignstr = \"+\"\r\n\r\n    expstr = \"E\" + expsignstr\r\n\r\n    index = 0\r\n    while (index < expprecision - expstrtmp.length + expstart) {\r\n        expstr += \"0\"\r\n        index++\r\n    }\r\n\r\n    expstr += expstrtmp.substring(expstart, expstrtmp.length)\r\n\r\n    output = signstr\r\n\r\n    if (locDPact === start + 1) {\r\n        output += input.substring(start, stop)\r\n    }\r\n    else if (stop === start + 1) {\r\n        output += input.substring(start, stop)\r\n        output += \".\"\r\n    }\r\n    else if (locDPact < start) {\r\n        output += input.substring(start, start + 1)\r\n        output += \".\"\r\n        output += input.substring(start + 1, stop)\r\n    }\r\n    else if (locDPact !== -1) {\r\n        output += input.substring(start, start + 1)\r\n        output += \".\"\r\n        output += input.substring(start + 1, locDPact)\r\n        output += input.substring(locDPact + 1, stop)\r\n    }\r\n    else {\r\n        output += input.substring(start, stop)\r\n        output += \".\"\r\n    }\r\n\r\n    output += expstr\r\n\r\n    return output;\r\n}\r\n\r\nfunction MostSigOrder(input) {\r\n    let output = new String()\r\n    let expstr = new String()\r\n\r\n    var expprecision, expbias, stop, expnum, index\r\n\r\n    expprecision = 5\r\n    expbias = 50000\r\n\r\n    stop = input.indexOf(\"E\");\r\n\r\n    output = input.substring(stop + 1, input.length)\r\n    expnum = output * 1\r\n    expnum += expbias\r\n\r\n    expstr = \"\" + expnum\r\n\r\n    output = expstr\r\n\r\n    index = 0\r\n    while (index < expprecision - expstr.length) {\r\n        output = \"0\" + output\r\n        index++\r\n    }\r\n\r\n    output += input.substring(1, 2)\r\n    output += input.substring(3, stop)\r\n\r\n    return output;\r\n}\r\n\r\nfunction A_gt_B(A, B) {\r\n    let numerals = new String()\r\n\r\n    var greater, stop, index, Adigit, Bdigit\r\n\r\n    numerals = \"0123456789\";\r\n\r\n    greater = false\r\n\r\n    if (A.length > B.length)\r\n        stop = A.length\r\n    else\r\n        stop = B.length\r\n\r\n    index = 0\r\n    while (index < stop) {\r\n        if (index < A.length)\r\n            Adigit = numerals.indexOf(A.charAt(index))\r\n        else\r\n            Adigit = 0\r\n\r\n        if (index < B.length)\r\n            Bdigit = numerals.indexOf(B.charAt(index))\r\n        else\r\n            Bdigit = 0\r\n\r\n        if (Adigit < Bdigit)\r\n            break\r\n        else if (Adigit > Bdigit) {\r\n            greater = true\r\n            break\r\n        }\r\n\r\n        index++\r\n    }//end while\r\n\r\n    return greater;\r\n}\r\n\r\nfunction OvfCheck(input) {\r\n    let output = new String()\r\n\r\n    //Is value magnitude greater than +1.7976931348623157E+00308\r\n    if (A_gt_B(MostSigOrder(input), \"5030817976931348623157\")) {\r\n        output = \"Infinity\"\r\n        if (input.charAt(0) === \"-\")\r\n            output = \"-\" + output\r\n    }\r\n    else\r\n        output = input\r\n\r\n    return output;\r\n}\r\n\r\nfunction UndfCheck(input) {\r\n    let output = new String()\r\n\r\n    //Is value magnitude less than +2.4703282292062328E-00324\r\n    if (A_gt_B(\"4967624703282292062328\", MostSigOrder(input)))\r\n        output = \"underflow\"\r\n    else\r\n        output = \"normal\"\r\n\r\n    return output;\r\n}\r\n\r\nfunction RemoveBlanks(input) {\r\n    let output = new String()\r\n\r\n    var start, stop\r\n\r\n    start = 0\r\n    while ((input.charAt(start) === \" \") && (start < input.length))\r\n        start++\r\n\r\n    stop = input.length - 1\r\n    while ((input.charAt(stop) === \" \") && (stop >= 0))\r\n        stop--\r\n\r\n    output = input.substring(start, stop + 1)\r\n\r\n    return output\r\n}\r\n\r\nexport function Convert2Hex() {\r\n    let output = new String()\r\n    let numerals = new String()\r\n\r\n    var temp, index, i\r\n\r\n    numerals = \"0123456789ABCDEF\"\r\n\r\n    //convert binary result to hex and output\r\n    for (index = 0; index < this.Size; index += 4) {\r\n        temp = 0\r\n        for (i = 0; i < 4; i++)\r\n            temp += Math.pow(2, 3 - i) * this.Result[index + i]\r\n\r\n        output = output + numerals.charAt(temp)\r\n    }\r\n    return output\r\n}\r\n\r\nfunction numStrClipOff(input, precision) {\r\n    let result = new String()\r\n    let numerals = new String()\r\n    let tempstr = new String()\r\n    let expstr = new String()\r\n    let signstr = new String()\r\n\r\n    var locE, stop, expnum, locDP, start, MSD, MSDfound, index, expdelta, digits\r\n    var number\r\n\r\n    numerals = \"0123456789\";\r\n\r\n    tempstr = input.toUpperCase()\r\n\r\n    locE = tempstr.indexOf(\"E\");\r\n    if (locE !== -1) {\r\n        stop = locE\r\n        expstr = input.substring(locE + 1, input.length)\r\n        expnum = expstr * 1\r\n    }\r\n    else {\r\n        stop = input.length\r\n        expnum = 0\r\n    }\r\n\r\n    if (input.indexOf(\".\") === -1) {\r\n        tempstr = input.substring(0, stop)\r\n        tempstr += \".\"\r\n        if (input.length !== stop)\r\n            tempstr += input.substring(locE, input.length)\r\n\r\n        input = tempstr\r\n\r\n        locE = locE + 1\r\n        stop = stop + 1\r\n    }\r\n\r\n    locDP = input.indexOf(\".\");\r\n\r\n    start = 0\r\n    if (input.charAt(start) === \"-\") {\r\n        start++\r\n        signstr = \"-\"\r\n    }\r\n    else\r\n        signstr = \"\"\r\n\r\n    MSD = start\r\n    MSDfound = false\r\n    while ((MSD < stop) && !MSDfound) {\r\n        index = 1\r\n        while (index < numerals.length) {\r\n            if (input.charAt(MSD) === numerals.charAt(index)) {\r\n                MSDfound = true\r\n                break\r\n            }\r\n            index++\r\n        }\r\n        MSD++\r\n    }\r\n    MSD--\r\n\r\n    if (MSDfound) {\r\n        expdelta = locDP - MSD\r\n        if (expdelta > 0)\r\n            expdelta = expdelta - 1\r\n\r\n        expnum = expnum + expdelta\r\n\r\n        expstr = \"e\" + expnum\r\n    }\r\n    else  //No significant digits found, value is zero\r\n        MSD = start\r\n\r\n    digits = stop - MSD\r\n\r\n    tempstr = input.substring(MSD, stop)\r\n\r\n    if (tempstr.indexOf(\".\") !== -1)\r\n        digits = digits - 1\r\n\r\n    number = digits\r\n    if (precision < digits)\r\n        number = precision\r\n\r\n    tempstr = input.substring(MSD, MSD + number + 1)\r\n\r\n    if ((MSD !== start) || (tempstr.indexOf(\".\") === -1)) {\r\n        result = signstr\r\n        result += input.substring(MSD, MSD + 1)\r\n        result += \".\"\r\n        result += input.substring(MSD + 1, MSD + number)\r\n\r\n        while (digits < precision) {\r\n            result += \"0\"\r\n            digits += 1\r\n        }\r\n\r\n        result += expstr\r\n    }\r\n    else {\r\n        result = input.substring(0, start + number + 1)\r\n\r\n        while (digits < precision) {\r\n            result += \"0\"\r\n            digits += 1\r\n        }\r\n\r\n        if (input.length !== stop)\r\n            result += input.substring(locE, input.length)\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction numCutOff(input, precision) {\r\n    let result = new String()\r\n    let tempstr = new String()\r\n\r\n    var temp = input;\r\n    if (temp < 1)\r\n        temp += 1;\r\n\r\n    tempstr = \"\" + temp;\r\n\r\n    tempstr = numStrClipOff(tempstr, precision);\r\n\r\n    if (temp === input)\r\n        result = tempstr.substring(0, 1);\r\n    else\r\n        result = \"0\";\r\n\r\n    result += tempstr.substring(1, tempstr.length);\r\n\r\n    return result;\r\n}\r\n\r\nexport function Convert2Dec() {\r\n    let output = new String()\r\n\r\n    var s, i, dp, val, hid, temp, decValue, power\r\n\r\n    if (this.Size === 32) s = 9\r\n    else s = 12\r\n\r\n    if ((this.BinaryPower < this.MinExp) || (this.BinaryPower > this.MaxExp)) {\r\n        dp = 0\r\n        val = 0\r\n    }\r\n    else {\r\n        dp = - 1\r\n        val = 1\r\n    }\r\n\r\n    for (i = s; i < this.Size; i++)\r\n        val += parseInt(this.Result[i]) * Math.pow(2, dp + s - i)\r\n\r\n    decValue = val * Math.pow(2, this.BinaryPower)\r\n\r\n    if (this.Size === 32) {\r\n        s = 8\r\n        if (val > 0) {\r\n            power = Math.floor(Math.log(decValue) / Math.LN10)\r\n            decValue += 0.5 * Math.pow(10, power - s + 1)\r\n            val += 5E-8\r\n        }\r\n    }\r\n    else s = 17\r\n\r\n    if (this.Result[0] === 1) decValue = - decValue\r\n\r\n    //the system refuses to display negative \"0\"s with a minus sign\r\n    this.DecValue = \"\" + decValue\r\n    if ((this.DecValue === \"0\") && (this.Result[0] === 1))\r\n        this.DecValue = \"-\" + this.DecValue\r\n\r\n    this.DecValue = numStrClipOff(this.DecValue, s)\r\n\r\n    output = numCutOff(val, s)\r\n\r\n    return output\r\n}\r\n\r\n//object construction function\r\nfunction ieee(Size) {\r\n\r\n    this.Size = Size\r\n    this.BinaryPower = 0\r\n    this.DecValue = \"\"\r\n    this.DispStr = \"\"\r\n    this.Convert2Bin = Convert2Bin   //convert input to bin.\r\n    this.Convert2Hex = Convert2Hex   //convert bin. to hex.\r\n    this.Convert2Dec = Convert2Dec   //convert bin. significand to dec.\r\n    this.Dec2Bin = Dec2Bin           //convert dec. to bin.\r\n    this.StatCond = \"normal\"\r\n    this.StatCond64 = \"normal\"\r\n    this.BinString = \"\"\r\n    // 1 (carry bit) + 1023 + 1 + 1022 + 53 + 2 (round bits)\r\n    this.BinVal = new Array(2102)    //Binary Representation\r\n    if (Size === 32) {\r\n        this.ExpBias = 127\r\n        this.MaxExp = 127\r\n        this.MinExp = -126\r\n        this.MinUnnormExp = -149\r\n        this.Result = new Array(32)\r\n    }\r\n    else if (Size === 64) {\r\n        this.ExpBias = 1023\r\n        this.MaxExp = 1023\r\n        this.MinExp = -1022\r\n        this.MinUnnormExp = -1074\r\n        this.Result = new Array(64)\r\n    }\r\n\r\n}\r\n\r\nexport function float2Hex(d) {\r\n    var sign = \"0\";\r\n    d = (typeof (d) === 'string') ? parseFloat(d) : d;\r\n    if (d < 0.0) {\r\n        sign = \"1\";\r\n        d = -d;\r\n    }\r\n\r\n    var mantissa = parseFloat(d).toString(2);\r\n\r\n    var exponent = 0;\r\n\r\n    if (mantissa.substr(0, 1) === \"0\") {\r\n        exponent = mantissa.indexOf('.') - mantissa.indexOf('1') + 127;\r\n    }\r\n    else {\r\n        exponent = mantissa.indexOf('.') - 1 + 127;\r\n    }\r\n\r\n    mantissa = mantissa.replace(\".\", \"\");\r\n    mantissa = mantissa.substr(mantissa.indexOf('1') + 1);\r\n\r\n    if (mantissa.length > 23) {\r\n        mantissa = mantissa.substr(0, 23);\r\n    }\r\n    else {\r\n        while (mantissa.length < 23) {\r\n            mantissa = mantissa + \"0\";\r\n        }\r\n    }\r\n\r\n    var exp = parseFloat(exponent).toString(2);\r\n\r\n    while (exp.length < 8) {\r\n        exp = \"0\" + exp;\r\n    }\r\n\r\n    var numberFull = sign + exp + mantissa;\r\n\r\n    return parseInt(numberFull, 2).toString(16);\r\n}\r\n\r\nexport function float2ieee754(input) {\r\n    /*\r\n      in this javascript program, bit positions are numbered\r\n      0 ~ 32/64 from left to right instead of right to left, the\r\n      way the output is presented\r\n    */\r\n    input = (typeof (input) !== 'string') ? input.toString() : input;\r\n    let ieee32 = new ieee(32)\r\n    let ieee64 = new ieee(64)\r\n    let rounding = true;\r\n    var index1, cnst\r\n\r\n    //   input = obj.input.value\r\n    input = RemoveBlanks(input)\r\n\r\n    ieee64.Dec2Bin(input)\r\n    ieee64.BinString =\r\n        ieee64.Convert2Bin(ieee64.DispStr, ieee64.StatCond64, ieee64.Result[0],\r\n            ieee64.BinaryPower, false)\r\n    //   obj.bin64_0.value = ieee64.BinString.substring(0, 1)\r\n    //   obj.bin64_1.value = ieee64.BinString.substring(1, 12)\r\n    //   if ((ieee64.BinaryPower < ieee64.MinExp) ||\r\n    //       (ieee64.BinaryPower > ieee64.MaxExp))\r\n    //   {\r\n    //     obj.bin64_12.value = \"  \"\r\n    //     obj.bin64_12.value += ieee64.BinString.substring(12, 13)\r\n    //     obj.bin64_12.value += \".\"\r\n    //     obj.bin64_12.value += ieee64.BinString.substring(13, 64)\r\n    //   }\r\n    //   else\r\n    //   {\r\n    //     obj.bin64_12.value = \"1 .\"\r\n    //     obj.bin64_12.value += ieee64.BinString.substring(12, 64)\r\n    //   }\r\n    //   obj.stat64.value = ieee64.StatCond\r\n    //   obj.binpwr64.value = ieee64.BinaryPower\r\n    //   obj.binpwr64f.value = ieee64.BinaryPower + ieee64.ExpBias\r\n    //   obj.dec64sig.value = ieee64.Convert2Dec()\r\n    //   if (ieee64.DispStr !== \"\")\r\n    //   {\r\n    //     obj.dec64.value = ieee64.DispStr\r\n    //     obj.dec64sig.value = \"\"\r\n    //   }\r\n    //   else\r\n    //     obj.dec64.value = ieee64.DecValue\r\n    //   obj.hex64.value = ieee64.Convert2Hex()\r\n\r\n    cnst = 2102         // 1 (carry bit) + 1023 + 1 + 1022 + 53 + 2 (round bits)\r\n    for (index1 = 0; index1 < cnst; index1++)\r\n        ieee32.BinVal[index1] = ieee64.BinVal[index1]\r\n\r\n    ieee32.BinString =\r\n        ieee32.Convert2Bin(ieee64.DispStr, ieee64.StatCond64, ieee64.Result[0],\r\n            ieee64.BinaryPower, rounding)\r\n    //   obj.bin32_0.value = ieee32.BinString.substring(0, 1)\r\n    //   obj.bin32_1.value = ieee32.BinString.substring(1, 9)\r\n    //   if ((ieee32.BinaryPower < ieee32.MinExp) ||\r\n    //       (ieee32.BinaryPower > ieee32.MaxExp))\r\n    //   {\r\n    //     obj.bin32_9.value = \"  \"\r\n    //     obj.bin32_9.value += ieee32.BinString.substring(9, 10)\r\n    //     obj.bin32_9.value += \".\"\r\n    //     obj.bin32_9.value += ieee32.BinString.substring(10, 32)\r\n    //   }\r\n    //   else\r\n    //   {\r\n    //     obj.bin32_9.value = \"1 .\"\r\n    //     obj.bin32_9.value += ieee32.BinString.substring(9, 32)\r\n    //   }\r\n    //   obj.stat32.value = ieee32.StatCond\r\n    //   obj.binpwr32.value = ieee32.BinaryPower\r\n    //   obj.binpwr32f.value = ieee32.BinaryPower + ieee32.ExpBias\r\n    //   obj.dec32sig.value = ieee32.Convert2Dec()\r\n    //   if (ieee32.DispStr !== \"\")\r\n    //   {\r\n    //     obj.dec32.value = ieee32.DispStr\r\n    //     obj.dec32sig.value = \"\"\r\n    //   }\r\n    //   else\r\n    //     obj.dec32.value = ieee32.DecValue\r\n    //   obj.hex32.value = ieee32.Convert2Hex()\r\n\r\n    //   if ((ieee64.DispStr !== \"\") && (ieee32.DispStr !== \"\"))\r\n    //     obj.entered.value = ieee64.DispStr\r\n    //   else\r\n    //     obj.entered.value = input * 1.0\r\n    let binStr = ieee32.BinString;\r\n    let sign_bit = binStr[0];\r\n    let exp_bit = binStr.substring(1, 9);\r\n    let mantissa_bit = binStr.substring(9, 32);\r\n    let exp = ieee32.BinaryPower;\r\n    let mantissa = ieee32.Convert2Dec();\r\n    return { sign_bit, exp_bit, mantissa_bit, exp, mantissa };\r\n}\r\n\r\n\r\nexport function hex2Float(str) {\r\n    var float = 0;\r\n    let int = 0, multi = 1;\r\n    let re = /^0x[0-9a-fA-F]+$/g;\r\n\r\n    str = (str.substring(0, 2) !== '0x') ? `0x${str}` : str;\r\n    if (str.length > 10) throw 'Value out of range';\r\n    if (!re.test(str)) throw \"Invalid input!\";\r\n\r\n    if (/^0x/.exec(str)) {\r\n        int = parseInt(str, 16);\r\n    } else {\r\n        for (var i = str.length - 1; i >= 0; i -= 1) {\r\n            if (str.charCodeAt(i) > 255) {\r\n                throw 'Invalid input!'\r\n            }\r\n            int += str.charCodeAt(i) * multi;\r\n            multi *= 256;\r\n        }\r\n    }\r\n    let sign = (int >>> 31) ? -1 : 1;\r\n    let exp = (int >>> 23 & 0xff) - 127;\r\n    let mantissa = ((int & 0x7fffff) + 0x800000).toString(2);\r\n    for (i = 0; i < mantissa.length; i += 1) {\r\n        float += parseInt(mantissa[i]) ? Math.pow(2, exp) : 0;\r\n        exp--;\r\n    }\r\n    return float * sign;\r\n}\r\n\r\nexport function hex2ieee754(str) {\r\n    let floatVal = hex2Float(str);\r\n    return float2ieee754(floatVal);\r\n}\r\n\r\nfunction ieee754ToFloat(s, e, m) {\r\n    let sign = parseInt(s);\r\n    let exp = parseInt(e);\r\n    let f = parseFloat(m);\r\n    if (exp == 0 && f == 0) return 0;\r\n    return Math.pow(-1, sign) * (1+f) * Math.pow(2, exp - 127);\r\n}\r\n\r\nfunction ieeee754ToHex(s, e, m) {\r\n    // validateiee754(s,e,m)\r\n    let float = ieee754ToFloat(s, e, m);\r\n    return float2Hex(float);\r\n}\r\n\r\nexport function convert(input, format) {\r\n    if (!format || !input) throw 'Invalid input!';\r\n    let realVal, hexVal, binVal;\r\n    if (format == \"float\") {\r\n        // input = parseFloat(input);\r\n        if (!(parsefloat(input))) throw 'Input entered is invalid';\r\n        hexVal = float2Hex(input);\r\n        binVal = float2ieee754(input);\r\n        realVal = input;\r\n    }\r\n    else if (format == \"hex\") {\r\n        realVal = hex2Float(input);\r\n        hexVal = input;\r\n        binVal = hex2ieee754(input);\r\n    }\r\n    else if (format == \"ieee754\") {\r\n        let parts = input.split(\"|\");\r\n        let s = parts[0], e = parts[1], m = parts[2];\r\n        validateiee754(s, e, m)\r\n        hexVal = ieeee754ToHex(s, e, m);\r\n        realVal = ieee754ToFloat(s, e, m);\r\n        binVal = float2ieee754(realVal);\r\n    }\r\n\r\n    return { 'hexVal': hexVal, 'binVal': binVal, 'realVal': realVal }\r\n}\r\n\r\nfunction testInt(num) {\r\n    return (/^\\d+$/g).test(num);\r\n}\r\n\r\nfunction validateiee754(s, e, m) {\r\n    if (!testInt(s) || !testInt(e) || !parsefloat(m)) throw 'Invalid input';\r\n    let sign = parseInt(s);\r\n    let exp = parseInt(e);\r\n    m = parseFloat(m);\r\n    if (isNaN(sign) || isNaN(exp) || isNaN(m)) throw 'Invalid input';\r\n    if (!(sign == 0 || sign == 1)) throw 'invalid sign input';\r\n\r\n    // Special cases\r\n    if (m != 0 && exp === 255) throw 'special case identified: NaN';\r\n    if (sign == 0 && m == 0 && exp === 255) throw 'special case identified: +Infinity';\r\n    if (sign == 1 && m == 0 && exp === 255) throw 'special case identified: -Infinity';\r\n\r\n    if (exp === 0) {\r\n        (m !== 0) ? alert('special case identified: Denormalized numbers') : alert('special case identified: Zero');\r\n        return;\r\n    }\r\n\r\n    // Special cases\r\n    if (exp < 0 || exp > 255) throw 'exponent value out of range';\r\n    if (m < 0 || m > 1) throw 'mantissa value out of range';\r\n\r\n\r\n\r\n}\r\n\r\nfunction parsefloat(num) {\r\n    let re = /^[+-]?\\d+(\\.\\d+)?$/;\r\n    return re.test(num);\r\n}\r\n\r\n\r\nexport function operate(val1, val2, operation, format) {\r\n\r\n    if (!format || !val1 || !val2 || !operation) throw \"Invalid input!\";\r\n    let realVal, hexVal, binVal, output;\r\n\r\n    if (format == \"float\") {\r\n        if (!(parsefloat(val1)) || !(parsefloat(val2))) throw 'Input entered is invalid';\r\n        output = compute(val1, val2, operation);\r\n    }\r\n    else if (format == \"hex\") {\r\n        val1 = hex2Float(val1);\r\n        val2 = hex2Float(val2);\r\n        output = compute(val1, val2, operation);\r\n    }\r\n    else if (format == \"ieee754\") {\r\n        let parts1 = val1.split(\"|\");\r\n        let parts2 = val2.split(\"|\");\r\n        let s1 = parts1[0], e1 = parts1[1], m1 = parts1[2];\r\n        let s2 = parts2[0], e2 = parts2[1], m2 = parts2[2];\r\n        let floatVal1 = ieee754ToFloat(s1, e1, m1);\r\n        let floatVal2 = ieee754ToFloat(s2, e2, m2);\r\n\r\n        output = compute(floatVal1, floatVal2, operation);\r\n    }\r\n\r\n    hexVal = float2Hex(output);\r\n    binVal = float2ieee754(output);\r\n    realVal = output;\r\n    return { 'hexVal': hexVal, 'binVal': binVal, 'realVal': realVal }\r\n\r\n}\r\n\r\n\r\nfunction compute(val1, val2, operation) {\r\n    let output = 0;\r\n    if (operation == \"add\") output = parseFloat(val1) + parseFloat(val2)\r\n    else if (operation == \"subtract\") output = parseFloat(val1) - parseFloat(val2)\r\n    else if (operation == \"multiply\") output = parseFloat(val1) * parseFloat(val2)\r\n    return output\r\n}","import React, {Component} from 'react';\r\n\r\nexport const HistoryContext = React.createContext();  //exporting context object\r\nexport class HistoryProvider extends Component {\r\nstate = {history: \"some data\"}\r\nrender() {\r\n        return (\r\n            <HistoryContext.Provider value={\r\n            {   state: this.state,\r\n                setHistory: (value) => this.setState({\r\n                            history: value })}}>\r\n            {this.props.children}   \r\n            </HistoryContext.Provider>)\r\n    }\r\n}","const URL = \"https://localhost:5001\";\r\nexport default URL;","import { useState, useEffect, useContext } from 'react';\r\nimport './Conversion.css';\r\nimport { convert } from '../Math';\r\nimport { HistoryContext } from '../Contexts/history.context';\r\nimport axios from 'axios';\r\nimport URL from '../config';\r\n\r\n\r\n\r\nconst Conversion = () => {\r\n    const [format, setFormat] = useState('float');\r\n    const [realVal, setrealVal] = useState('');\r\n    const [binVal, setbinVal] = useState(\"\");\r\n    const [hexVal, sethexVal] = useState('');\r\n    const [sign, setSign] = useState('');\r\n    const [exp, setExp] = useState('');\r\n    const [mantissa, setMantissa] = useState('');\r\n    const [val, setVal] = useState('');\r\n    const historyContext = useContext(HistoryContext);\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"IEEE 754 Converter\";\r\n        getHistory();\r\n      }, []);\r\n\r\n    const handleChange = (event) => {\r\n        const format = event.target.value;\r\n        setFormat(format);\r\n        setbinVal('');\r\n        sethexVal('');\r\n        setrealVal('');\r\n        setVal('');\r\n        setSign('');\r\n        setExp('');\r\n        setMantissa('');\r\n    }\r\n\r\n    const getHistory = () => {\r\n        axios.get(`${URL}/items`)\r\n              .then((res) => {\r\n                  console.log(res)\r\n                //   setData(res.data);\r\n                  historyContext.setHistory(res.data);\r\n              })\r\n              .catch((error) => {\r\n                  console.log(error)\r\n                  alert(\"Invalid inputs\")\r\n              })\r\n    }\r\n\r\n\r\n    const addToHistory = ({Type, InputType}) => {\r\n        axios.post(`${URL}/items`, { Type, InputType })\r\n            .then((res) => {\r\n                console.log(res);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(\"Invalid inputs\")\r\n            })\r\n    }\r\n\r\n    const submit = (event) => {\r\n        let value = (format === \"ieee754\") ? `${sign}|${exp}|${mantissa}` : val;\r\n        let binVal, realVal, hexVal;\r\n        try {\r\n            ({ binVal, realVal, hexVal } = convert(value, format));\r\n            addToHistory({Type: 'conversion', InputType: format});\r\n            setbinVal(binVal);\r\n            sethexVal(hexVal);\r\n            setrealVal(realVal);\r\n        } catch (e) {\r\n            alert(e);\r\n            setbinVal('');\r\n            sethexVal('');\r\n            setrealVal('');\r\n        }\r\n\r\n        // axios.post(`${URL}/conversion`, { format, value })\r\n        //     .then((res) => {\r\n        //         const { realVal, binVal, hexVal } = res['data'];\r\n        //         // setbinVal(binVal)\r\n        //         sethexVal(hexVal)\r\n        //         setrealVal(realVal)\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.log(error)\r\n        //         alert(\"Invalid inputs\")\r\n        //     })\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"border border-info p-2 mb-2\">\r\n                (-1)<sup>sign  </sup> (1 + fraction) x 2 <sup>exponent - bias</sup>\r\n            </div>\r\n            \r\n            <div className=\"format\">\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" checked={format === 'float'} onChange={handleChange} name=\"input_format\" value='float' type=\"radio\" id=\"float\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"float\">Float</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" onChange={handleChange} name=\"input_format\" value='ieee754' type=\"radio\" id=\"ieee754\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"ieee754\">IEEE-754</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" onChange={handleChange} name=\"input_format\" value='hex' type=\"radio\" id=\"hex\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"hex\">Hex</label>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Input */}\r\n            <div className=\"w-75  justify-content-center  d-flex\">\r\n                {\r\n                    (format === 'ieee754') ? (\r\n                        <div className=\"d-flex\">\r\n                            <input type=\"text\" onChange={(e) => setSign(e.target.value)} value={sign} placeholder=\"sign\" style={{ flexBasis: '30%' }} className=\"form-control\" />\r\n                            <input type=\"text\" onChange={(e) => setExp(e.target.value)} value={exp} placeholder=\"exponent(0-255)\" className=\"form-control mx-2\" />\r\n                            <input type=\"text\" onChange={(e) => setMantissa(e.target.value)} value={mantissa} placeholder=\"fraction(0-1)\" className=\"form-control\" />\r\n                        </div>\r\n                    ) :\r\n                        (<input type=\"text\" value={val} onChange={(e) => setVal(e.target.value)} style={{ width: '30%' }} placeholder=\"Enter a value\"\r\n                            className=\"form-control\" />)\r\n                }\r\n                <button onClick={submit} type=\"button\" className=\"btn btn-success mx-3\">Convert</button>\r\n            </div>\r\n            {/* Output */}\r\n            <div className=\"output\">\r\n                <div className=\"outputformat form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"decimal\">Float</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input id=\"decimal\" placeholder=\"decimal\" className=\"form-control \" value={realVal} type=\"text\" disabled />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row form-group justify-content-left p-3 align-items-center border border-info rounded\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"float\">IEEE-754</label>\r\n                    <div className=\"ieee754 col-sm-10\">\r\n                        <div className=\"d-flex justify-content-around p-1\">\r\n                            <input id=\"sign\" placeholder=\"sign\" className=\"form-control\" value={binVal ? ((binVal['sign_bit'] === \"1\") ? \"-1\" : \"+1\") : \"\"} type=\"text\" disabled />\r\n                            <input id=\"exponent\" placeholder=\"biased exponent (exp-127)\" className=\"form-control mx-2\" value={binVal ? binVal['exp'] : \"\"} type=\"text\" disabled />\r\n                            <input id=\"mantissa\" placeholder=\"(1+fraction)\" className=\"form-control\" value={binVal ? binVal['mantissa'] : ''} type=\"text\" disabled />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-around p-1\">\r\n                            <input id=\"sign bit\" placeholder=\"sign (binary)\" className=\"form-control\" value={binVal ? binVal['sign_bit'] : ''} type=\"text\" disabled />\r\n                            <input id=\"exponent bits\" placeholder=\"exponent (binary)\" className=\"form-control mx-2\" value={binVal ? binVal['exp_bit'] : ''} type=\"text\" disabled />\r\n                            <input id=\"mantissa bits\" placeholder=\"mantissa (binary)\" className=\"form-control\" value={binVal ? binVal['mantissa_bit'] : ''} type=\"text\" disabled />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-around p-1\">\r\n                            <input id=\"sign-encode\" placeholder=\"sign (Encoded as)\" className=\"form-control\" value={binVal ? binVal['sign_bit'] : ''} type=\"text\" disabled />\r\n                            <input id=\"exponent-encode\" placeholder=\"exponent (Encoded as)\" className=\"form-control mx-2\" value={binVal ? `${parseInt(binVal['exp']) + 127}` : ''} type=\"text\" disabled />\r\n                            <input id=\"mantissa-encode\" placeholder=\"mantissa (Encoded as)\" className=\"form-control\" value={binVal ? `${parseInt(binVal[\"mantissa_bit\"], 2)}` : \"\"} type=\"text\" disabled />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"outputformat form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"hex\">Hex</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input id=\"hex\" placeholder=\"hexadecimal\" className=\"form-control\" value={hexVal} type=\"text\" disabled />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Conversion;","import { useState } from 'react';\r\nimport './Operations.css';\r\nimport { operate } from '../Math';\r\nimport axios from 'axios';\r\nimport URL from '../config';\r\n\r\n\r\nconst Operations = () => {\r\n    const [format, setFormat] = useState('float');\r\n    const [operation, setOperation] = useState('')\r\n    const [realVal, setrealVal] = useState('');\r\n    const [binVal, setbinVal] = useState('');\r\n    const [hexVal, sethexVal] = useState('');\r\n    const [val1, setVal1] = useState('');\r\n    const [val2, setVal2] = useState('');\r\n    const [iee754Val1, setiee754Val1] = useState({ sign: '', exp: '', mantissa: '' });\r\n    const [iee754Val2, setiee754Val2] = useState({ sign: '', exp: '', mantissa: '' });\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const val = event.target.value;\r\n        setFormat(val);\r\n        setbinVal('')\r\n        sethexVal('')\r\n        setrealVal('')\r\n        setVal1('')\r\n        setVal2('')\r\n        setOperation('')\r\n        setiee754Val1({ sign: '', exp: '', mantissa: '' });\r\n        setiee754Val2({ sign: '', exp: '', mantissa: '' });\r\n    }\r\n    const handleSelect = (event) => {\r\n        const val = event.target.value;\r\n        setOperation(val);\r\n    }\r\n\r\n    const handleInput1Change = (e) => {\r\n        setVal1(e.target.value)\r\n    }\r\n\r\n    const submit = (event) => {\r\n        let value1 = (format === \"ieee754\") ? `${iee754Val1.sign}|${iee754Val1.exp}|${iee754Val1.mantissa}` : val1;\r\n        let value2 = (format === \"ieee754\") ? `${iee754Val2.sign}|${iee754Val2.exp}|${iee754Val2.mantissa}` : val2;\r\n        let binVal, realVal, hexVal;\r\n        try {\r\n            ({ binVal, realVal, hexVal } = operate(value1, value2, operation, format));\r\n            addToHistory({Type: 'operation', InputType: format});\r\n            setbinVal(binVal);\r\n            sethexVal(hexVal);\r\n            setrealVal(realVal);\r\n        } catch (e) {\r\n            alert(e);\r\n            setbinVal('')\r\n            sethexVal('')\r\n            setrealVal('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const addToHistory = ({Type, InputType}) => {\r\n        axios.post(`${URL}/items`, { Type, InputType })\r\n            .then((res) => {\r\n                console.log(res);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(\"Invalid inputs\")\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"border border-info p-2 mb-2\">\r\n                (-1)<sup>sign  </sup> (1 + fraction) x 2 <sup>exponent - bias</sup>\r\n            </div>\r\n            <div className=\"format\">\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" checked={format === \"float\"} onChange={handleChange} name=\"input_format1\" value='float' type=\"radio\" id=\"reafloatl\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"float\">Float</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" onChange={handleChange} name=\"input_format1\" value='ieee754' type=\"radio\" id=\"ieee754\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"ieee754\">IEE754</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" onChange={handleChange} name=\"input_format1\" value='hex' type=\"radio\" id=\"hex\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"hex\">Hex</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"input\">\r\n                {\r\n                    (format === 'ieee754') ? (\r\n                        <div>\r\n                            <div className=\"d-flex mx-2\">\r\n                                <input type=\"text\" val={iee754Val1.sign} onChange={(e) => setiee754Val1({ sign: e.target.value, exp: iee754Val1.exp, mantissa: iee754Val1.mantissa })} placeholder=\"sign\" style={{ flexBasis: '30%' }} className=\"form-control\" />\r\n                                <input type=\"text\" val={iee754Val1.exp} onChange={(e) => setiee754Val1({ sign: iee754Val1.sign, exp: e.target.value, mantissa: iee754Val1.mantissa })} placeholder=\"exponent(0-255)\" className=\"form-control mx-2\" />\r\n                                <input type=\"text\" val={iee754Val1.mantissa} onChange={(e) => setiee754Val1({ sign: iee754Val1.sign, exp: iee754Val1.exp, mantissa: e.target.value })} placeholder=\"fraction(0-1)\" className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"d-flex m-2\">\r\n                                <input type=\"text\" val={iee754Val2.sign} onChange={(e) => setiee754Val2({ sign: e.target.value, exp: iee754Val2.exp, mantissa: iee754Val2.mantissa })} placeholder=\"sign\" style={{ flexBasis: '30%' }} className=\"form-control\" />\r\n                                <input type=\"text\" val={iee754Val2.exp} onChange={(e) => setiee754Val2({ sign: iee754Val2.sign, exp: e.target.value, mantissa: iee754Val2.mantissa })} placeholder=\"exponent(0-255)\" className=\"form-control mx-2\" />\r\n                                <input type=\"text\" val={iee754Val2.mantissa} onChange={(e) => setiee754Val2({ sign: iee754Val2.sign, exp: iee754Val2.exp, mantissa: e.target.value })} placeholder=\"fraction(0-1)\" className=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n                    ) :\r\n\r\n                        (<div style={{ flexBasis: \"40%\" }}>\r\n                            <input onChange={handleInput1Change} type=\"text\" value={val1} placeholder=\"Enter the first value\" className=\"form-control\" />\r\n                            <input onChange={(e) => setVal2(e.target.value)} value={val2} type=\"text\" placeholder=\"Enter the second value\" className=\"form-control my-2\" />\r\n                        </div>)\r\n                }\r\n                <select onChange={handleSelect} value={operation} style={{ width: '30%' }} className=\"form-select mx-2\" aria-label=\"Default select example\">\r\n                    <option defaultValue>Select Operation</option>\r\n                    <option value=\"add\">Addition</option>\r\n                    <option value=\"subtract\">Subtraction</option>\r\n                    <option value=\"multiply\">Multiplication</option>\r\n                </select>\r\n                <button onClick={submit} type=\"button\" className=\"btn btn-success\">Submit</button>\r\n            </div>\r\n\r\n            {/* Output */}\r\n            <div className=\"output\">\r\n                <div className=\"outputformat form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"decimal\">Float</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input id=\"decimal\" placeholder=\"decimal\" className=\"form-control \" value={realVal} type=\"text\" disabled />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row form-group justify-content-left p-2 align-items-center border border-info rounded  p-3\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"float\">IEEE-754</label>\r\n                    <div className=\"ieee754 col-sm-10\">\r\n                        <div className=\"d-flex justify-content-around p-1\">\r\n                            <input id=\"sign\" placeholder=\"sign\" className=\"form-control\" value={binVal ? ((binVal['sign_bit'] === \"1\") ? \"-1\" : \"+1\") : \"\"} type=\"text\" disabled />\r\n                            <input id=\"exponent\" placeholder=\"biased exponent (exp-127)(exponent-127)\" className=\"form-control mx-2\" value={binVal ? binVal['exp'] : \"\"} type=\"text\" disabled />\r\n                            <input id=\"mantissa\" placeholder=\"(1+fraction)\" className=\"form-control\" value={binVal ? binVal['mantissa'] : ''} type=\"text\" disabled />\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-around p-1\">\r\n                            <input id=\"sign bit\" placeholder=\"sign (binary)\" className=\"form-control\" value={binVal ? binVal['sign_bit'] : ''} type=\"text\" disabled />\r\n                            <input id=\"exponent bits\" placeholder=\"exponent (binary)\" className=\"form-control mx-2\" value={binVal ? binVal['exp_bit'] : ''} type=\"text\" disabled />\r\n                            <input id=\"mantissa bits\" placeholder=\"mantissa (binary)\" className=\"form-control\" value={binVal ? binVal['mantissa_bit'] : ''} type=\"text\" disabled />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-around p-1\">\r\n                            <input id=\"sign-encode\" placeholder=\"sign (Encoded as)\" className=\"form-control\" value={binVal ? binVal['sign_bit'] : ''} type=\"text\" disabled />\r\n                            <input id=\"exponent-encode\" placeholder=\"exponent (Encoded as)\" className=\"form-control mx-2\" value={binVal ? `${parseInt(binVal['exp']) + 127}` : ''} type=\"text\" disabled />\r\n                            <input id=\"mantissa-encode\" placeholder=\"mantissa (Encoded as)\" className=\"form-control\" value={binVal ? `${parseInt(binVal[\"mantissa_bit\"], 2)}` : \"\"} type=\"text\" disabled />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"outputformat form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"hex\">Hex</label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input id=\"hex\" placeholder=\"hexadecimal\" className=\"form-control\" value={hexVal} type=\"text\" disabled />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Operations;","import React, { useEffect, useContext } from 'react'\r\nimport { HistoryContext } from '../Contexts/history.context';\r\nimport axios from 'axios';\r\nimport URL from '../config';\r\n\r\n\r\nfunction History(props) {\r\n\r\n    const historyContext = useContext(HistoryContext);\r\n\r\n    const getHistory = () => {\r\n        axios.get(`${URL}/items`)\r\n              .then((res) => {\r\n                  console.log(res)\r\n                //   setData(res.data);\r\n                  historyContext.setHistory(res.data);\r\n              })\r\n              .catch((error) => {\r\n                  console.log(error)\r\n                  alert(\"Invalid inputs\")\r\n              })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getHistory();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"wrapper\" >\r\n            <div>\r\n                <table style={{color:'white'}} className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Type</th>\r\n                            <th scope=\"col\">InputType</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {historyContext.state.history.map(item => (\r\n                            <tr>\r\n                                <td>{item.type}</td>\r\n                                <td>{item.inputType}</td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default History;","import React, { useEffect } from 'react'\r\nimport './Home.css';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    return (\r\n        <div className=\"wrapper\" >\r\n            <input style={{width:'25%', backgroundColor:'#282c34',color:'white', border:'1.5px solid white'}} className=\"form-control\"\r\n                type=\"text\" placeholder=\"Enter username\"\r\n                onKeyPress={props.handleEnter}\r\n            /> </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  useHistory,\r\n  withRouter,\r\n  Route,\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport Conversion from './components/Conversion';\r\nimport Operations from './components/Operations';\r\nimport History from './components/History';\r\nimport Home from './components/Home';\r\nimport URL from './config';\r\nimport {HistoryProvider} from './Contexts/history.context';\r\n\r\n\r\n\r\nfunction App(props) {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  useEffect(() => {\r\n    document.title = \"IEEE 754 Converter\";\r\n    // getHistory();\r\n  }, []);\r\n\r\n\r\n  // const getHistory = () => {\r\n  //     axios.get(`${URL}/items`)\r\n  //           .then((res) => {\r\n  //               console.log(res)\r\n  //               setData(res.data);\r\n  //           })\r\n  //           .catch((error) => {\r\n  //               console.log(error)\r\n  //               alert(\"Invalid inputs\")\r\n  //           })\r\n  // }\r\n\r\n  const handleEnter = (event) => {\r\n    if(event.key === \"Enter\") {\r\n      props.history.push(\"/conversion\");\r\n      setLoggedIn(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        {loggedIn ?\r\n          <header className=\"App-header\">\r\n            <div className=\"menu\">\r\n              {/* <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink> */}\r\n              <NavLink activeClassName=\"active\" to=\"/conversion\">Conversion</NavLink>\r\n              <NavLink activeClassName=\"active\" to=\"/operations\">Operations</NavLink>\r\n              <NavLink activeClassName=\"active\" to=\"/history\">History</NavLink>\r\n            </div>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <HistoryProvider>\r\n              <Route path=\"/operations\">\r\n                <Operations />\r\n              </Route>\r\n              <Route path=\"/conversion\">\r\n                <Conversion />\r\n              </Route>\r\n              <Route path=\"/history\">\r\n                <History/>\r\n              </Route>\r\n              </HistoryProvider>\r\n            </Switch>\r\n          </header>\r\n          : <Home handleEnter = {handleEnter}/>}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nReactDOM.render(\r\n  <Router>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}